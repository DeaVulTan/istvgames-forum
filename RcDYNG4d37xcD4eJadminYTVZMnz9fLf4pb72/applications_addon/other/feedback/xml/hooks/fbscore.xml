<?xml version="1.0" encoding="utf-8"?>
<hookexport>
  <hookdata>
    <config>
      <hook_name><![CDATA[Response Information [TopicView]]]></hook_name>
      <hook_desc><![CDATA[Displays member&#39;s responses score next to their posts]]></hook_desc>
      <hook_author>Zero108</hook_author>
      <hook_email/>
      <hook_website></hook_website>
      <hook_update_check/>
      <hook_requirements><![CDATA[a:3:{s:21:"required_applications";a:1:{s:8:"feedback";a:3:{s:8:"app_name";s:22:"Users Response System";s:11:"min_version";i:0;s:11:"max_version";i:0;}}s:20:"hook_php_version_min";s:0:"";s:20:"hook_php_version_max";s:0:"";}]]></hook_requirements>
      <hook_version_human>2.6.3</hook_version_human>
      <hook_version_long>12000</hook_version_long>
      <hook_extra_data><![CDATA[a:2:{s:7:"display";N;s:8:"database";a:0:{}}]]></hook_extra_data>
      <hook_key>feedbackscore</hook_key>
      <hook_global_caches/>
    </config>
  </hookdata>
  <hookfiles>
    <file>
      <hook_file_real>fbscore.php</hook_file_real>
      <hook_type>templateHooks</hook_type>
      <hook_classname>fbscore</hook_classname>
      <hook_data><![CDATA[a:8:{s:12:"dataLocation";s:0:"";s:14:"libApplication";s:0:"";s:15:"classToOverload";s:0:"";s:9:"skinGroup";s:11:"skin_global";s:12:"skinFunction";s:12:"userInfoPane";s:4:"type";s:2:"if";s:2:"id";s:9:"rankimage";s:8:"position";s:10:"post.endif";}]]></hook_data>
      <hooks_source><![CDATA[<?php

/**
 * Profile Hook
 */

class fbscore
{
	function __construct()
	{
		$this->registry =	ipsRegistry::instance();
		$this->settings  =&	$this->registry->fetchSettings();
		$this->request  =&	$this->registry->fetchRequest();

		$classToLoad = IPSLib::loadLibrary( IPSLib::getAppDir( 'feedback' ) . "/sources/feedbackLib.php", 'feedbackLib', 'feedback' );
		$this->registry->feedback = new $classToLoad( $this->registry );
	}

	public function getOutput()
	{
	}

	public function replaceOutput($output, $key)
	{
		/* Check PCs */
		if($this->request['app'] == 'members' && $this->request['module'] == 'messaging')
		{
			if( ! $this->settings['fb_userPanePC'])
			{
				return $output;
			}
		}

		/* Check Forum */
		if($this->request['app'] == 'forums')
		{
			if(in_array($this->request['f'], explode(',', $this->settings['fb_hideInForums'])))
			{
				return $output;
			}
		}

		if ( ! $this->registry->permissions->check( 'view', $this->registry->feedback->getPermissions() ) )
		{
			return $output;
		}

		$tag	= '<!--hook.' . $key . '-->';
		$last	= 0;

		foreach( $this->registry->output->getTemplate('global')->functionData['userInfoPane'] as $_post )
		{
			$pos	= strpos( $output, $tag, $last );

			if( $pos )
			{
				$_post['author']['fbLink'] = $this->registry->output->buildSEOUrl( 'showuser=' . $_post['author']['member_id'].'&amp;tab=feedback', 'public', $_post['author']['members_seo_name'], 'showuser' );
				$string	= $this->registry->getClass('output')->getTemplate('feedback')->userPaneFeedback( $_post['author'] );
				$output	= substr_replace( $output, $string . $tag, $pos, strlen( $tag ) );
				$last	= $pos + strlen( $tag . $string );
			}
		}

		return $output;
	}
}
?>]]></hooks_source>
    </file>
    <file>
      <hook_file_real>feedbackUserPaneData.php</hook_file_real>
      <hook_type>dataHooks</hook_type>
      <hook_classname>feedbackDataHook</hook_classname>
      <hook_data><![CDATA[a:8:{s:12:"dataLocation";s:14:"topicViewQuery";s:14:"libApplication";s:0:"";s:15:"classToOverload";s:0:"";s:9:"skinGroup";N;s:12:"skinFunction";N;s:4:"type";N;s:2:"id";N;s:8:"position";N;}]]></hook_data>
      <hooks_source><![CDATA[<?php

/**
 * Data Hook
 */

class feedbackDataHook
{
	public function handleData( $data )
	{
		$data['members'] = array(	'feedb_percent',
									'feedb_pos',
									'feedb_neu',
									'feedb_neg');

		return $data;
	}
}
?>]]></hooks_source>
    </file>
  </hookfiles>
  <hookextras_settings/>
  <hookextras_language/>
  <hookextras_modules/>
  <hookextras_help/>
  <hookextras_templates/>
  <hookextras_css/>
  <hookextras_tasks/>
  <hookextras_database_create/>
  <hookextras_database_alter/>
  <hookextras_database_update/>
  <hookextras_database_insert/>
</hookexport>
